# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

--1. What is the average danceability by artist and track? 
SELECT artist_name, track_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

--2. Who are the top 10 artists based on popularity? 
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10; 

--3. What artist released the longest song? 
SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

--Other way
SELECT artist_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata;

--4. What's the average danceability for the 10 most popular songs?
SELECT AVG(danceability) AS average_danceability
FROM (
    SELECT danceability
    FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 10
) AS top_10_popular_songs;

--5. What is the most popular song?
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 1;

--6. What is the average energy of songs per artist?
SELECT artist_name, ROUND(AVG(energy),2) AS Avg_of_Songs
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

--7. How many songs are there for each song mode?
SELECT song_mode, COUNT(DISTINCT track_id) AS Total_songs
FROM BIT_DB.Spotifydata
GROUP BY song_mode;

--8. What are the songs with a duration longer than 4 minutes and their respective duration in minutes and seconds?
SELECT track_name, duration_ms / 60000 AS minutes, (duration_ms % 60000) / 1000 AS seconds
FROM BIT_DB.Spotifydata
WHERE duration_ms > 240000;

--9. What are the slowest songs (lowest tempo) for each artist?
SELECT artist_name, track_name, tempo
FROM BIT_DB.Spotifydata
WHERE (artist_name, tempo) IN (
    SELECT artist_name, MIN(tempo)
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
)
ORDER BY tempo ASC;

--10. What is the percentage of songs with a popularity above 70?
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM BIT_DB.Spotifydata) AS percentage_high_popularity
FROM BIT_DB.Spotifydata
WHERE popularity > 70;

--11. What is the average acousticness of songs grouped by song key?
SELECT song_key, AVG(acousticness) AS avg_acousticness
FROM BIT_DB.Spotifydata
GROUP BY song_key;

--12. Determining the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

--13. Determining who the Top 10 artists are by popularity
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;
